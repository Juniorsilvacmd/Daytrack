version: "3.7"

services:
  daytrack-frontend:
    image: nginx:alpine
    networks:
      - nioNet
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
      labels:
        - traefik.enable=true
        - traefik.http.routers.daytrack-frontend.rule=Host(`daytrack.niochat.com.br`)
        - traefik.http.routers.daytrack-frontend.entrypoints=websecure
        - traefik.http.routers.daytrack-frontend.tls.certresolver=letsencryptresolver
        - traefik.http.routers.daytrack-frontend.service=daytrack-frontend
        - traefik.http.services.daytrack-frontend.loadbalancer.server.port=80
        - traefik.http.services.daytrack-frontend.loadbalancer.passHostHeader=true
        # Healthcheck
        - traefik.http.services.daytrack-frontend.loadbalancer.healthcheck.path=/
        - traefik.http.services.daytrack-frontend.loadbalancer.healthcheck.interval=10s
        - traefik.http.services.daytrack-frontend.loadbalancer.healthcheck.timeout=5s
    command: >
      sh -c "
      apk add --no-cache curl &&
      curl -L https://github.com/Juniorsilvacmd/Daytrack/archive/refs/heads/main.zip -o /tmp/daytrack.zip &&
      unzip /tmp/daytrack.zip -d /tmp/ &&
      cd /tmp/Daytrack-main &&
      npm install &&
      npm run build &&
      cp -r dist/* /usr/share/nginx/html/ &&
      nginx -g 'daemon off;'
      "

  daytrack-backend:
    image: python:3.11-slim
    networks:
      - nioNet
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: "1"
          memory: 1024M
        reservations:
          cpus: "0.5"
          memory: 512M
      labels:
        - traefik.enable=true
        - traefik.http.routers.daytrack-backend.rule=Host(`django.niochat.com.br`)
        - traefik.http.routers.daytrack-backend.entrypoints=websecure
        - traefik.http.routers.daytrack-backend.tls.certresolver=letsencryptresolver
        - traefik.http.routers.daytrack-backend.service=daytrack-backend
        - traefik.http.services.daytrack-backend.loadbalancer.server.port=8000
        - traefik.http.services.daytrack-backend.loadbalancer.passHostHeader=true
        # Healthcheck
        - traefik.http.services.daytrack-backend.loadbalancer.healthcheck.path=/api/v1/
        - traefik.http.services.daytrack-backend.loadbalancer.healthcheck.interval=10s
        - traefik.http.services.daytrack-backend.loadbalancer.healthcheck.timeout=5s
    environment:
      - DEBUG=False
      - SECRET_KEY=django-insecure-production-key-change-this
      - ALLOWED_HOSTS=django.niochat.com.br,localhost,127.0.0.1
      - DATABASE_URL=postgresql://postgres:Semfim01@@db.flojrapvlpueanbpvdab.supabase.co:5432/postgres
      - CORS_ALLOWED_ORIGINS=https://daytrack.niochat.com.br
    command: >
      sh -c "
      apt-get update &&
      apt-get install -y --no-install-recommends postgresql-client build-essential libpq-dev curl unzip &&
      curl -L https://github.com/Juniorsilvacmd/Daytrack/archive/refs/heads/main.zip -o /tmp/daytrack.zip &&
      unzip /tmp/daytrack.zip -d /tmp/ &&
      cd /tmp/Daytrack-main/daytrack_backend &&
      pip install -r requirements.txt &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "

networks:
  nioNet:
    external: true
    name: nioNet
